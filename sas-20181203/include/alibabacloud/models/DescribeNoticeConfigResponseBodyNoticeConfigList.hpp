// This file is auto-generated, don't edit it. Thanks.
#ifndef ALIBABACLOUD_MODELS_DESCRIBENOTICECONFIGRESPONSEBODYNOTICECONFIGLIST_HPP_
#define ALIBABACLOUD_MODELS_DESCRIBENOTICECONFIGRESPONSEBODYNOTICECONFIGLIST_HPP_
#include <darabonba/Core.hpp>
using namespace std;
using json = nlohmann::json;
namespace AlibabaCloud
{
namespace Sas20181203
{
namespace Models
{
  class DescribeNoticeConfigResponseBodyNoticeConfigList : public Darabonba::Model {
  public:
    friend void to_json(Darabonba::Json& j, const DescribeNoticeConfigResponseBodyNoticeConfigList& obj) { 
      DARABONBA_PTR_TO_JSON(AliUid, aliUid_);
      DARABONBA_PTR_TO_JSON(CurrentPage, currentPage_);
      DARABONBA_PTR_TO_JSON(Project, project_);
      DARABONBA_PTR_TO_JSON(Route, route_);
      DARABONBA_PTR_TO_JSON(TimeLimit, timeLimit_);
    };
    friend void from_json(const Darabonba::Json& j, DescribeNoticeConfigResponseBodyNoticeConfigList& obj) { 
      DARABONBA_PTR_FROM_JSON(AliUid, aliUid_);
      DARABONBA_PTR_FROM_JSON(CurrentPage, currentPage_);
      DARABONBA_PTR_FROM_JSON(Project, project_);
      DARABONBA_PTR_FROM_JSON(Route, route_);
      DARABONBA_PTR_FROM_JSON(TimeLimit, timeLimit_);
    };
    DescribeNoticeConfigResponseBodyNoticeConfigList() = default ;
    DescribeNoticeConfigResponseBodyNoticeConfigList(const DescribeNoticeConfigResponseBodyNoticeConfigList &) = default ;
    DescribeNoticeConfigResponseBodyNoticeConfigList(DescribeNoticeConfigResponseBodyNoticeConfigList &&) = default ;
    DescribeNoticeConfigResponseBodyNoticeConfigList(const Darabonba::Json & obj) { from_json(obj, *this); };
    virtual ~DescribeNoticeConfigResponseBodyNoticeConfigList() = default ;
    DescribeNoticeConfigResponseBodyNoticeConfigList& operator=(const DescribeNoticeConfigResponseBodyNoticeConfigList &) = default ;
    DescribeNoticeConfigResponseBodyNoticeConfigList& operator=(DescribeNoticeConfigResponseBodyNoticeConfigList &&) = default ;
    virtual void validate() const override {
    };
    virtual void fromMap(const Darabonba::Json &obj) override { from_json(obj, *this); validate(); };
    virtual Darabonba::Json toMap() const override { Darabonba::Json obj; to_json(obj, *this); return obj; };
    virtual bool empty() const override { return this->aliUid_ == nullptr
        && return this->currentPage_ == nullptr && return this->project_ == nullptr && return this->route_ == nullptr && return this->timeLimit_ == nullptr; };
    // aliUid Field Functions 
    bool hasAliUid() const { return this->aliUid_ != nullptr;};
    void deleteAliUid() { this->aliUid_ = nullptr;};
    inline int64_t aliUid() const { DARABONBA_PTR_GET_DEFAULT(aliUid_, 0L) };
    inline DescribeNoticeConfigResponseBodyNoticeConfigList& setAliUid(int64_t aliUid) { DARABONBA_PTR_SET_VALUE(aliUid_, aliUid) };


    // currentPage Field Functions 
    bool hasCurrentPage() const { return this->currentPage_ != nullptr;};
    void deleteCurrentPage() { this->currentPage_ = nullptr;};
    inline int32_t currentPage() const { DARABONBA_PTR_GET_DEFAULT(currentPage_, 0) };
    inline DescribeNoticeConfigResponseBodyNoticeConfigList& setCurrentPage(int32_t currentPage) { DARABONBA_PTR_SET_VALUE(currentPage_, currentPage) };


    // project Field Functions 
    bool hasProject() const { return this->project_ != nullptr;};
    void deleteProject() { this->project_ = nullptr;};
    inline string project() const { DARABONBA_PTR_GET_DEFAULT(project_, "") };
    inline DescribeNoticeConfigResponseBodyNoticeConfigList& setProject(string project) { DARABONBA_PTR_SET_VALUE(project_, project) };


    // route Field Functions 
    bool hasRoute() const { return this->route_ != nullptr;};
    void deleteRoute() { this->route_ = nullptr;};
    inline int32_t route() const { DARABONBA_PTR_GET_DEFAULT(route_, 0) };
    inline DescribeNoticeConfigResponseBodyNoticeConfigList& setRoute(int32_t route) { DARABONBA_PTR_SET_VALUE(route_, route) };


    // timeLimit Field Functions 
    bool hasTimeLimit() const { return this->timeLimit_ != nullptr;};
    void deleteTimeLimit() { this->timeLimit_ = nullptr;};
    inline int32_t timeLimit() const { DARABONBA_PTR_GET_DEFAULT(timeLimit_, 0) };
    inline DescribeNoticeConfigResponseBodyNoticeConfigList& setTimeLimit(int32_t timeLimit) { DARABONBA_PTR_SET_VALUE(timeLimit_, timeLimit) };


  protected:
    // The ID of the user.
    std::shared_ptr<int64_t> aliUid_ = nullptr;
    // The page number of the returned page.
    std::shared_ptr<int32_t> currentPage_ = nullptr;
    // The identifier of the notification item. Valid values:
    // 
    // *   **yundun_security_Weekreport**: notification for vulnerabilities
    // *   **yundun_sas_antiransomware_task**: notification for results of restoration tasks
    // *   **sas_healthcheck**: notification for baseline checks
    // *   **sas_suspicious**: notification for alerts generated by Security Center
    // *   **yundun_aegis_AV_true**: notification for precision defense
    // *   **yundun_sas_ak_leakage**: notification for AccessKey pair leaks
    // *   **yundun_sas_config_alert**: notification for configuration assessment
    // *   **yundun_sas_vul_Emergency**: notification for urgent vulnerabilities
    // *   **yundun_webguard_event**: notification for web tamper proofing
    // *   **yundun_sas_cloud_native_firewall**: notification for alerts generated by the container firewall feature
    // *   **yundun_sas_cloud_native_firewall_Defense**: notification for proactive defense implemented by the container firewall feature
    // *   **yundun_IP_Blocking**: notification for blocked brute-force attacks initiated from malicious IP addresses
    // *   **yundun_sas_anti_virus_config**: notification for virus scan
    // *   **yundun_sas_log**: notification for excess logs
    // *   **yundun_honeypot_alarm**: notification for alerts generated by the honeypot feature
    // *   **aliyun_rasp_alarm**: notification for alerts generated by the application security feature
    // *   **virusScheduleTask**: notification for completion of scheduled virus scans
    // *   **yundun_anti_Virus**: notification that no security checks are performed
    // *   **sas_vulnerability**: notification for vulnerabilities
    // *   **weeklyreport**: notification for weekly reports
    // *   **agent**: notification that the Security Center agent is offline
    // *   **bruteforcesuccess**: notification for protection against brute-force attacks
    // *   **webshell**: notification for webshells
    // *   **suspicious**: notification for alerts generated by Server Guard
    // *   **patch**: deprecated
    // *   **remotelogin**: notification for remote logons
    // *   **health**: notification for security checks
    // *   **yundun_sas_cloudsiem_log**: notifications of insufficient threat analysis log capacity
    // 
    // > If the value is **yundun_security_Weekreport**, weekly reports are sent to notify you of unhandled vulnerabilities.
    std::shared_ptr<string> project_ = nullptr;
    // The notification method. Valid values:
    // 
    // *   **1**: text message
    // *   **2**: email
    // *   **4**: internal message
    // *   **3**: text message and email
    // *   **5**: text message and internal message
    // *   **6**: email and internal message
    // *   **7**: text message, email, and internal message
    std::shared_ptr<int32_t> route_ = nullptr;
    // The time period during which Security Center sends notifications. Valid values:
    // 
    // *   **0**: any time
    // *   **1**: 08:00 to 22:00
    std::shared_ptr<int32_t> timeLimit_ = nullptr;
  };

  } // namespace Models
} // namespace AlibabaCloud
} // namespace Sas20181203
#endif
