// This file is auto-generated, don't edit it. Thanks.
#ifndef ALIBABACLOUD_MODELS_LISTAVAILABLEATTACKPATHRESPONSEBODY_HPP_
#define ALIBABACLOUD_MODELS_LISTAVAILABLEATTACKPATHRESPONSEBODY_HPP_
#include <darabonba/Core.hpp>
#include <vector>
#include <alibabacloud/models/ListAvailableAttackPathResponseBodyAttackPathList.hpp>
using namespace std;
using json = nlohmann::json;
namespace AlibabaCloud
{
namespace Sas20181203
{
namespace Models
{
  class ListAvailableAttackPathResponseBody : public Darabonba::Model {
  public:
    friend void to_json(Darabonba::Json& j, const ListAvailableAttackPathResponseBody& obj) { 
      DARABONBA_PTR_TO_JSON(AttackPathList, attackPathList_);
      DARABONBA_PTR_TO_JSON(RequestId, requestId_);
    };
    friend void from_json(const Darabonba::Json& j, ListAvailableAttackPathResponseBody& obj) { 
      DARABONBA_PTR_FROM_JSON(AttackPathList, attackPathList_);
      DARABONBA_PTR_FROM_JSON(RequestId, requestId_);
    };
    ListAvailableAttackPathResponseBody() = default ;
    ListAvailableAttackPathResponseBody(const ListAvailableAttackPathResponseBody &) = default ;
    ListAvailableAttackPathResponseBody(ListAvailableAttackPathResponseBody &&) = default ;
    ListAvailableAttackPathResponseBody(const Darabonba::Json & obj) { from_json(obj, *this); };
    virtual ~ListAvailableAttackPathResponseBody() = default ;
    ListAvailableAttackPathResponseBody& operator=(const ListAvailableAttackPathResponseBody &) = default ;
    ListAvailableAttackPathResponseBody& operator=(ListAvailableAttackPathResponseBody &&) = default ;
    virtual void validate() const override {
    };
    virtual void fromMap(const Darabonba::Json &obj) override { from_json(obj, *this); validate(); };
    virtual Darabonba::Json toMap() const override { Darabonba::Json obj; to_json(obj, *this); return obj; };
    virtual bool empty() const override { this->attackPathList_ != nullptr
        && this->requestId_ != nullptr; };
    // attackPathList Field Functions 
    bool hasAttackPathList() const { return this->attackPathList_ != nullptr;};
    void deleteAttackPathList() { this->attackPathList_ = nullptr;};
    inline const vector<ListAvailableAttackPathResponseBodyAttackPathList> & attackPathList() const { DARABONBA_PTR_GET_CONST(attackPathList_, vector<ListAvailableAttackPathResponseBodyAttackPathList>) };
    inline vector<ListAvailableAttackPathResponseBodyAttackPathList> attackPathList() { DARABONBA_PTR_GET(attackPathList_, vector<ListAvailableAttackPathResponseBodyAttackPathList>) };
    inline ListAvailableAttackPathResponseBody& setAttackPathList(const vector<ListAvailableAttackPathResponseBodyAttackPathList> & attackPathList) { DARABONBA_PTR_SET_VALUE(attackPathList_, attackPathList) };
    inline ListAvailableAttackPathResponseBody& setAttackPathList(vector<ListAvailableAttackPathResponseBodyAttackPathList> && attackPathList) { DARABONBA_PTR_SET_RVALUE(attackPathList_, attackPathList) };


    // requestId Field Functions 
    bool hasRequestId() const { return this->requestId_ != nullptr;};
    void deleteRequestId() { this->requestId_ = nullptr;};
    inline string requestId() const { DARABONBA_PTR_GET_DEFAULT(requestId_, "") };
    inline ListAvailableAttackPathResponseBody& setRequestId(string requestId) { DARABONBA_PTR_SET_VALUE(requestId_, requestId) };


  protected:
    // List of attack paths.
    std::shared_ptr<vector<ListAvailableAttackPathResponseBodyAttackPathList>> attackPathList_ = nullptr;
    // The ID of this call request, a unique identifier generated by Alibaba Cloud for the request, which can be used to troubleshoot and locate issues.
    std::shared_ptr<string> requestId_ = nullptr;
  };

  } // namespace Models
} // namespace AlibabaCloud
} // namespace Sas20181203
#endif
