// This file is auto-generated, don't edit it. Thanks.
#ifndef ALIBABACLOUD_MODELS_INSTALLAEGISFORLINGJUNRESPONSEBODY_HPP_
#define ALIBABACLOUD_MODELS_INSTALLAEGISFORLINGJUNRESPONSEBODY_HPP_
#include <darabonba/Core.hpp>
#include <vector>
#include <alibabacloud/models/InstallAegisForLingjunResponseBodyInvokeTasks.hpp>
using namespace std;
using json = nlohmann::json;
namespace AlibabaCloud
{
namespace Sas20181203
{
namespace Models
{
  class InstallAegisForLingjunResponseBody : public Darabonba::Model {
  public:
    friend void to_json(Darabonba::Json& j, const InstallAegisForLingjunResponseBody& obj) { 
      DARABONBA_PTR_TO_JSON(InvokeTasks, invokeTasks_);
      DARABONBA_PTR_TO_JSON(RequestId, requestId_);
      DARABONBA_PTR_TO_JSON(Success, success_);
    };
    friend void from_json(const Darabonba::Json& j, InstallAegisForLingjunResponseBody& obj) { 
      DARABONBA_PTR_FROM_JSON(InvokeTasks, invokeTasks_);
      DARABONBA_PTR_FROM_JSON(RequestId, requestId_);
      DARABONBA_PTR_FROM_JSON(Success, success_);
    };
    InstallAegisForLingjunResponseBody() = default ;
    InstallAegisForLingjunResponseBody(const InstallAegisForLingjunResponseBody &) = default ;
    InstallAegisForLingjunResponseBody(InstallAegisForLingjunResponseBody &&) = default ;
    InstallAegisForLingjunResponseBody(const Darabonba::Json & obj) { from_json(obj, *this); };
    virtual ~InstallAegisForLingjunResponseBody() = default ;
    InstallAegisForLingjunResponseBody& operator=(const InstallAegisForLingjunResponseBody &) = default ;
    InstallAegisForLingjunResponseBody& operator=(InstallAegisForLingjunResponseBody &&) = default ;
    virtual void validate() const override {
    };
    virtual void fromMap(const Darabonba::Json &obj) override { from_json(obj, *this); validate(); };
    virtual Darabonba::Json toMap() const override { Darabonba::Json obj; to_json(obj, *this); return obj; };
    virtual bool empty() const override { return this->invokeTasks_ == nullptr
        && return this->requestId_ == nullptr && return this->success_ == nullptr; };
    // invokeTasks Field Functions 
    bool hasInvokeTasks() const { return this->invokeTasks_ != nullptr;};
    void deleteInvokeTasks() { this->invokeTasks_ = nullptr;};
    inline const vector<InstallAegisForLingjunResponseBodyInvokeTasks> & invokeTasks() const { DARABONBA_PTR_GET_CONST(invokeTasks_, vector<InstallAegisForLingjunResponseBodyInvokeTasks>) };
    inline vector<InstallAegisForLingjunResponseBodyInvokeTasks> invokeTasks() { DARABONBA_PTR_GET(invokeTasks_, vector<InstallAegisForLingjunResponseBodyInvokeTasks>) };
    inline InstallAegisForLingjunResponseBody& setInvokeTasks(const vector<InstallAegisForLingjunResponseBodyInvokeTasks> & invokeTasks) { DARABONBA_PTR_SET_VALUE(invokeTasks_, invokeTasks) };
    inline InstallAegisForLingjunResponseBody& setInvokeTasks(vector<InstallAegisForLingjunResponseBodyInvokeTasks> && invokeTasks) { DARABONBA_PTR_SET_RVALUE(invokeTasks_, invokeTasks) };


    // requestId Field Functions 
    bool hasRequestId() const { return this->requestId_ != nullptr;};
    void deleteRequestId() { this->requestId_ = nullptr;};
    inline string requestId() const { DARABONBA_PTR_GET_DEFAULT(requestId_, "") };
    inline InstallAegisForLingjunResponseBody& setRequestId(string requestId) { DARABONBA_PTR_SET_VALUE(requestId_, requestId) };


    // success Field Functions 
    bool hasSuccess() const { return this->success_ != nullptr;};
    void deleteSuccess() { this->success_ = nullptr;};
    inline bool success() const { DARABONBA_PTR_GET_DEFAULT(success_, false) };
    inline InstallAegisForLingjunResponseBody& setSuccess(bool success) { DARABONBA_PTR_SET_VALUE(success_, success) };


  protected:
    // List of installation tasks returned.
    std::shared_ptr<vector<InstallAegisForLingjunResponseBodyInvokeTasks>> invokeTasks_ = nullptr;
    // The ID of this request, which is a unique identifier generated by Alibaba Cloud for this request and can be used for troubleshooting and problem localization.
    std::shared_ptr<string> requestId_ = nullptr;
    // Indicates whether the API call was successful. Values:
    // 
    // - **true**: The API call was successful.
    // - **false**: The API call failed.
    std::shared_ptr<bool> success_ = nullptr;
  };

  } // namespace Models
} // namespace AlibabaCloud
} // namespace Sas20181203
#endif
