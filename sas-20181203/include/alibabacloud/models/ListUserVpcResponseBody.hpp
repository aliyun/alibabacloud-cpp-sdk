// This file is auto-generated, don't edit it. Thanks.
#ifndef ALIBABACLOUD_MODELS_LISTUSERVPCRESPONSEBODY_HPP_
#define ALIBABACLOUD_MODELS_LISTUSERVPCRESPONSEBODY_HPP_
#include <darabonba/Core.hpp>
#include <vector>
#include <alibabacloud/models/ListUserVpcResponseBodyUserVpcInfos.hpp>
using namespace std;
using json = nlohmann::json;
namespace AlibabaCloud
{
namespace Sas20181203
{
namespace Models
{
  class ListUserVpcResponseBody : public Darabonba::Model {
  public:
    friend void to_json(Darabonba::Json& j, const ListUserVpcResponseBody& obj) { 
      DARABONBA_PTR_TO_JSON(RequestId, requestId_);
      DARABONBA_PTR_TO_JSON(UserVpcInfos, userVpcInfos_);
    };
    friend void from_json(const Darabonba::Json& j, ListUserVpcResponseBody& obj) { 
      DARABONBA_PTR_FROM_JSON(RequestId, requestId_);
      DARABONBA_PTR_FROM_JSON(UserVpcInfos, userVpcInfos_);
    };
    ListUserVpcResponseBody() = default ;
    ListUserVpcResponseBody(const ListUserVpcResponseBody &) = default ;
    ListUserVpcResponseBody(ListUserVpcResponseBody &&) = default ;
    ListUserVpcResponseBody(const Darabonba::Json & obj) { from_json(obj, *this); };
    virtual ~ListUserVpcResponseBody() = default ;
    ListUserVpcResponseBody& operator=(const ListUserVpcResponseBody &) = default ;
    ListUserVpcResponseBody& operator=(ListUserVpcResponseBody &&) = default ;
    virtual void validate() const override {
    };
    virtual void fromMap(const Darabonba::Json &obj) override { from_json(obj, *this); validate(); };
    virtual Darabonba::Json toMap() const override { Darabonba::Json obj; to_json(obj, *this); return obj; };
    virtual bool empty() const override { return this->requestId_ == nullptr
        && return this->userVpcInfos_ == nullptr; };
    // requestId Field Functions 
    bool hasRequestId() const { return this->requestId_ != nullptr;};
    void deleteRequestId() { this->requestId_ = nullptr;};
    inline string requestId() const { DARABONBA_PTR_GET_DEFAULT(requestId_, "") };
    inline ListUserVpcResponseBody& setRequestId(string requestId) { DARABONBA_PTR_SET_VALUE(requestId_, requestId) };


    // userVpcInfos Field Functions 
    bool hasUserVpcInfos() const { return this->userVpcInfos_ != nullptr;};
    void deleteUserVpcInfos() { this->userVpcInfos_ = nullptr;};
    inline const vector<ListUserVpcResponseBodyUserVpcInfos> & userVpcInfos() const { DARABONBA_PTR_GET_CONST(userVpcInfos_, vector<ListUserVpcResponseBodyUserVpcInfos>) };
    inline vector<ListUserVpcResponseBodyUserVpcInfos> userVpcInfos() { DARABONBA_PTR_GET(userVpcInfos_, vector<ListUserVpcResponseBodyUserVpcInfos>) };
    inline ListUserVpcResponseBody& setUserVpcInfos(const vector<ListUserVpcResponseBodyUserVpcInfos> & userVpcInfos) { DARABONBA_PTR_SET_VALUE(userVpcInfos_, userVpcInfos) };
    inline ListUserVpcResponseBody& setUserVpcInfos(vector<ListUserVpcResponseBodyUserVpcInfos> && userVpcInfos) { DARABONBA_PTR_SET_RVALUE(userVpcInfos_, userVpcInfos) };


  protected:
    // The ID of the request, which is a unique identifier generated by Alibaba Cloud for this request and can be used to troubleshoot and locate issues.
    std::shared_ptr<string> requestId_ = nullptr;
    // List of VPC information.
    std::shared_ptr<vector<ListUserVpcResponseBodyUserVpcInfos>> userVpcInfos_ = nullptr;
  };

  } // namespace Models
} // namespace AlibabaCloud
} // namespace Sas20181203
#endif
