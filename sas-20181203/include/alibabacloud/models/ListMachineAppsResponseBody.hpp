// This file is auto-generated, don't edit it. Thanks.
#ifndef ALIBABACLOUD_MODELS_LISTMACHINEAPPSRESPONSEBODY_HPP_
#define ALIBABACLOUD_MODELS_LISTMACHINEAPPSRESPONSEBODY_HPP_
#include <darabonba/Core.hpp>
#include <vector>
#include <alibabacloud/models/ListMachineAppsResponseBodyAppList.hpp>
#include <alibabacloud/models/ListMachineAppsResponseBodyPageInfo.hpp>
using namespace std;
using json = nlohmann::json;
namespace AlibabaCloud
{
namespace Sas20181203
{
namespace Models
{
  class ListMachineAppsResponseBody : public Darabonba::Model {
  public:
    friend void to_json(Darabonba::Json& j, const ListMachineAppsResponseBody& obj) { 
      DARABONBA_PTR_TO_JSON(AppList, appList_);
      DARABONBA_PTR_TO_JSON(PageInfo, pageInfo_);
      DARABONBA_PTR_TO_JSON(RequestId, requestId_);
    };
    friend void from_json(const Darabonba::Json& j, ListMachineAppsResponseBody& obj) { 
      DARABONBA_PTR_FROM_JSON(AppList, appList_);
      DARABONBA_PTR_FROM_JSON(PageInfo, pageInfo_);
      DARABONBA_PTR_FROM_JSON(RequestId, requestId_);
    };
    ListMachineAppsResponseBody() = default ;
    ListMachineAppsResponseBody(const ListMachineAppsResponseBody &) = default ;
    ListMachineAppsResponseBody(ListMachineAppsResponseBody &&) = default ;
    ListMachineAppsResponseBody(const Darabonba::Json & obj) { from_json(obj, *this); };
    virtual ~ListMachineAppsResponseBody() = default ;
    ListMachineAppsResponseBody& operator=(const ListMachineAppsResponseBody &) = default ;
    ListMachineAppsResponseBody& operator=(ListMachineAppsResponseBody &&) = default ;
    virtual void validate() const override {
    };
    virtual void fromMap(const Darabonba::Json &obj) override { from_json(obj, *this); validate(); };
    virtual Darabonba::Json toMap() const override { Darabonba::Json obj; to_json(obj, *this); return obj; };
    virtual bool empty() const override { this->appList_ != nullptr
        && this->pageInfo_ != nullptr && this->requestId_ != nullptr; };
    // appList Field Functions 
    bool hasAppList() const { return this->appList_ != nullptr;};
    void deleteAppList() { this->appList_ = nullptr;};
    inline const vector<ListMachineAppsResponseBodyAppList> & appList() const { DARABONBA_PTR_GET_CONST(appList_, vector<ListMachineAppsResponseBodyAppList>) };
    inline vector<ListMachineAppsResponseBodyAppList> appList() { DARABONBA_PTR_GET(appList_, vector<ListMachineAppsResponseBodyAppList>) };
    inline ListMachineAppsResponseBody& setAppList(const vector<ListMachineAppsResponseBodyAppList> & appList) { DARABONBA_PTR_SET_VALUE(appList_, appList) };
    inline ListMachineAppsResponseBody& setAppList(vector<ListMachineAppsResponseBodyAppList> && appList) { DARABONBA_PTR_SET_RVALUE(appList_, appList) };


    // pageInfo Field Functions 
    bool hasPageInfo() const { return this->pageInfo_ != nullptr;};
    void deletePageInfo() { this->pageInfo_ = nullptr;};
    inline const ListMachineAppsResponseBodyPageInfo & pageInfo() const { DARABONBA_PTR_GET_CONST(pageInfo_, ListMachineAppsResponseBodyPageInfo) };
    inline ListMachineAppsResponseBodyPageInfo pageInfo() { DARABONBA_PTR_GET(pageInfo_, ListMachineAppsResponseBodyPageInfo) };
    inline ListMachineAppsResponseBody& setPageInfo(const ListMachineAppsResponseBodyPageInfo & pageInfo) { DARABONBA_PTR_SET_VALUE(pageInfo_, pageInfo) };
    inline ListMachineAppsResponseBody& setPageInfo(ListMachineAppsResponseBodyPageInfo && pageInfo) { DARABONBA_PTR_SET_RVALUE(pageInfo_, pageInfo) };


    // requestId Field Functions 
    bool hasRequestId() const { return this->requestId_ != nullptr;};
    void deleteRequestId() { this->requestId_ = nullptr;};
    inline string requestId() const { DARABONBA_PTR_GET_DEFAULT(requestId_, "") };
    inline ListMachineAppsResponseBody& setRequestId(string requestId) { DARABONBA_PTR_SET_VALUE(requestId_, requestId) };


  protected:
    // Application list.
    std::shared_ptr<vector<ListMachineAppsResponseBodyAppList>> appList_ = nullptr;
    // Pagination information of the query result.
    std::shared_ptr<ListMachineAppsResponseBodyPageInfo> pageInfo_ = nullptr;
    // The ID of this call request, which is a unique identifier generated by Alibaba Cloud for the request. It can be used to troubleshoot and pinpoint issues.
    std::shared_ptr<string> requestId_ = nullptr;
  };

  } // namespace Models
} // namespace AlibabaCloud
} // namespace Sas20181203
#endif
