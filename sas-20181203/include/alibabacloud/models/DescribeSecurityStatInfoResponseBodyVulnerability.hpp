// This file is auto-generated, don't edit it. Thanks.
#ifndef ALIBABACLOUD_MODELS_DESCRIBESECURITYSTATINFORESPONSEBODYVULNERABILITY_HPP_
#define ALIBABACLOUD_MODELS_DESCRIBESECURITYSTATINFORESPONSEBODYVULNERABILITY_HPP_
#include <darabonba/Core.hpp>
#include <vector>
using namespace std;
using json = nlohmann::json;
namespace AlibabaCloud
{
namespace Sas20181203
{
namespace Models
{
  class DescribeSecurityStatInfoResponseBodyVulnerability : public Darabonba::Model {
  public:
    friend void to_json(Darabonba::Json& j, const DescribeSecurityStatInfoResponseBodyVulnerability& obj) { 
      DARABONBA_PTR_TO_JSON(AsapCount, asapCount_);
      DARABONBA_PTR_TO_JSON(AsapList, asapList_);
      DARABONBA_PTR_TO_JSON(DateArray, dateArray_);
      DARABONBA_PTR_TO_JSON(LaterCount, laterCount_);
      DARABONBA_PTR_TO_JSON(LaterList, laterList_);
      DARABONBA_PTR_TO_JSON(LevelsOn, levelsOn_);
      DARABONBA_PTR_TO_JSON(NntfCount, nntfCount_);
      DARABONBA_PTR_TO_JSON(NntfList, nntfList_);
      DARABONBA_PTR_TO_JSON(TimeArray, timeArray_);
      DARABONBA_PTR_TO_JSON(TotalCount, totalCount_);
      DARABONBA_PTR_TO_JSON(ValueArray, valueArray_);
    };
    friend void from_json(const Darabonba::Json& j, DescribeSecurityStatInfoResponseBodyVulnerability& obj) { 
      DARABONBA_PTR_FROM_JSON(AsapCount, asapCount_);
      DARABONBA_PTR_FROM_JSON(AsapList, asapList_);
      DARABONBA_PTR_FROM_JSON(DateArray, dateArray_);
      DARABONBA_PTR_FROM_JSON(LaterCount, laterCount_);
      DARABONBA_PTR_FROM_JSON(LaterList, laterList_);
      DARABONBA_PTR_FROM_JSON(LevelsOn, levelsOn_);
      DARABONBA_PTR_FROM_JSON(NntfCount, nntfCount_);
      DARABONBA_PTR_FROM_JSON(NntfList, nntfList_);
      DARABONBA_PTR_FROM_JSON(TimeArray, timeArray_);
      DARABONBA_PTR_FROM_JSON(TotalCount, totalCount_);
      DARABONBA_PTR_FROM_JSON(ValueArray, valueArray_);
    };
    DescribeSecurityStatInfoResponseBodyVulnerability() = default ;
    DescribeSecurityStatInfoResponseBodyVulnerability(const DescribeSecurityStatInfoResponseBodyVulnerability &) = default ;
    DescribeSecurityStatInfoResponseBodyVulnerability(DescribeSecurityStatInfoResponseBodyVulnerability &&) = default ;
    DescribeSecurityStatInfoResponseBodyVulnerability(const Darabonba::Json & obj) { from_json(obj, *this); };
    virtual ~DescribeSecurityStatInfoResponseBodyVulnerability() = default ;
    DescribeSecurityStatInfoResponseBodyVulnerability& operator=(const DescribeSecurityStatInfoResponseBodyVulnerability &) = default ;
    DescribeSecurityStatInfoResponseBodyVulnerability& operator=(DescribeSecurityStatInfoResponseBodyVulnerability &&) = default ;
    virtual void validate() const override {
    };
    virtual void fromMap(const Darabonba::Json &obj) override { from_json(obj, *this); validate(); };
    virtual Darabonba::Json toMap() const override { Darabonba::Json obj; to_json(obj, *this); return obj; };
    virtual bool empty() const override { return this->asapCount_ == nullptr
        && return this->asapList_ == nullptr && return this->dateArray_ == nullptr && return this->laterCount_ == nullptr && return this->laterList_ == nullptr && return this->levelsOn_ == nullptr
        && return this->nntfCount_ == nullptr && return this->nntfList_ == nullptr && return this->timeArray_ == nullptr && return this->totalCount_ == nullptr && return this->valueArray_ == nullptr; };
    // asapCount Field Functions 
    bool hasAsapCount() const { return this->asapCount_ != nullptr;};
    void deleteAsapCount() { this->asapCount_ = nullptr;};
    inline int32_t asapCount() const { DARABONBA_PTR_GET_DEFAULT(asapCount_, 0) };
    inline DescribeSecurityStatInfoResponseBodyVulnerability& setAsapCount(int32_t asapCount) { DARABONBA_PTR_SET_VALUE(asapCount_, asapCount) };


    // asapList Field Functions 
    bool hasAsapList() const { return this->asapList_ != nullptr;};
    void deleteAsapList() { this->asapList_ = nullptr;};
    inline const vector<string> & asapList() const { DARABONBA_PTR_GET_CONST(asapList_, vector<string>) };
    inline vector<string> asapList() { DARABONBA_PTR_GET(asapList_, vector<string>) };
    inline DescribeSecurityStatInfoResponseBodyVulnerability& setAsapList(const vector<string> & asapList) { DARABONBA_PTR_SET_VALUE(asapList_, asapList) };
    inline DescribeSecurityStatInfoResponseBodyVulnerability& setAsapList(vector<string> && asapList) { DARABONBA_PTR_SET_RVALUE(asapList_, asapList) };


    // dateArray Field Functions 
    bool hasDateArray() const { return this->dateArray_ != nullptr;};
    void deleteDateArray() { this->dateArray_ = nullptr;};
    inline const vector<string> & dateArray() const { DARABONBA_PTR_GET_CONST(dateArray_, vector<string>) };
    inline vector<string> dateArray() { DARABONBA_PTR_GET(dateArray_, vector<string>) };
    inline DescribeSecurityStatInfoResponseBodyVulnerability& setDateArray(const vector<string> & dateArray) { DARABONBA_PTR_SET_VALUE(dateArray_, dateArray) };
    inline DescribeSecurityStatInfoResponseBodyVulnerability& setDateArray(vector<string> && dateArray) { DARABONBA_PTR_SET_RVALUE(dateArray_, dateArray) };


    // laterCount Field Functions 
    bool hasLaterCount() const { return this->laterCount_ != nullptr;};
    void deleteLaterCount() { this->laterCount_ = nullptr;};
    inline int32_t laterCount() const { DARABONBA_PTR_GET_DEFAULT(laterCount_, 0) };
    inline DescribeSecurityStatInfoResponseBodyVulnerability& setLaterCount(int32_t laterCount) { DARABONBA_PTR_SET_VALUE(laterCount_, laterCount) };


    // laterList Field Functions 
    bool hasLaterList() const { return this->laterList_ != nullptr;};
    void deleteLaterList() { this->laterList_ = nullptr;};
    inline const vector<string> & laterList() const { DARABONBA_PTR_GET_CONST(laterList_, vector<string>) };
    inline vector<string> laterList() { DARABONBA_PTR_GET(laterList_, vector<string>) };
    inline DescribeSecurityStatInfoResponseBodyVulnerability& setLaterList(const vector<string> & laterList) { DARABONBA_PTR_SET_VALUE(laterList_, laterList) };
    inline DescribeSecurityStatInfoResponseBodyVulnerability& setLaterList(vector<string> && laterList) { DARABONBA_PTR_SET_RVALUE(laterList_, laterList) };


    // levelsOn Field Functions 
    bool hasLevelsOn() const { return this->levelsOn_ != nullptr;};
    void deleteLevelsOn() { this->levelsOn_ = nullptr;};
    inline const vector<string> & levelsOn() const { DARABONBA_PTR_GET_CONST(levelsOn_, vector<string>) };
    inline vector<string> levelsOn() { DARABONBA_PTR_GET(levelsOn_, vector<string>) };
    inline DescribeSecurityStatInfoResponseBodyVulnerability& setLevelsOn(const vector<string> & levelsOn) { DARABONBA_PTR_SET_VALUE(levelsOn_, levelsOn) };
    inline DescribeSecurityStatInfoResponseBodyVulnerability& setLevelsOn(vector<string> && levelsOn) { DARABONBA_PTR_SET_RVALUE(levelsOn_, levelsOn) };


    // nntfCount Field Functions 
    bool hasNntfCount() const { return this->nntfCount_ != nullptr;};
    void deleteNntfCount() { this->nntfCount_ = nullptr;};
    inline int32_t nntfCount() const { DARABONBA_PTR_GET_DEFAULT(nntfCount_, 0) };
    inline DescribeSecurityStatInfoResponseBodyVulnerability& setNntfCount(int32_t nntfCount) { DARABONBA_PTR_SET_VALUE(nntfCount_, nntfCount) };


    // nntfList Field Functions 
    bool hasNntfList() const { return this->nntfList_ != nullptr;};
    void deleteNntfList() { this->nntfList_ = nullptr;};
    inline const vector<string> & nntfList() const { DARABONBA_PTR_GET_CONST(nntfList_, vector<string>) };
    inline vector<string> nntfList() { DARABONBA_PTR_GET(nntfList_, vector<string>) };
    inline DescribeSecurityStatInfoResponseBodyVulnerability& setNntfList(const vector<string> & nntfList) { DARABONBA_PTR_SET_VALUE(nntfList_, nntfList) };
    inline DescribeSecurityStatInfoResponseBodyVulnerability& setNntfList(vector<string> && nntfList) { DARABONBA_PTR_SET_RVALUE(nntfList_, nntfList) };


    // timeArray Field Functions 
    bool hasTimeArray() const { return this->timeArray_ != nullptr;};
    void deleteTimeArray() { this->timeArray_ = nullptr;};
    inline const vector<string> & timeArray() const { DARABONBA_PTR_GET_CONST(timeArray_, vector<string>) };
    inline vector<string> timeArray() { DARABONBA_PTR_GET(timeArray_, vector<string>) };
    inline DescribeSecurityStatInfoResponseBodyVulnerability& setTimeArray(const vector<string> & timeArray) { DARABONBA_PTR_SET_VALUE(timeArray_, timeArray) };
    inline DescribeSecurityStatInfoResponseBodyVulnerability& setTimeArray(vector<string> && timeArray) { DARABONBA_PTR_SET_RVALUE(timeArray_, timeArray) };


    // totalCount Field Functions 
    bool hasTotalCount() const { return this->totalCount_ != nullptr;};
    void deleteTotalCount() { this->totalCount_ = nullptr;};
    inline int32_t totalCount() const { DARABONBA_PTR_GET_DEFAULT(totalCount_, 0) };
    inline DescribeSecurityStatInfoResponseBodyVulnerability& setTotalCount(int32_t totalCount) { DARABONBA_PTR_SET_VALUE(totalCount_, totalCount) };


    // valueArray Field Functions 
    bool hasValueArray() const { return this->valueArray_ != nullptr;};
    void deleteValueArray() { this->valueArray_ = nullptr;};
    inline const vector<string> & valueArray() const { DARABONBA_PTR_GET_CONST(valueArray_, vector<string>) };
    inline vector<string> valueArray() { DARABONBA_PTR_GET(valueArray_, vector<string>) };
    inline DescribeSecurityStatInfoResponseBodyVulnerability& setValueArray(const vector<string> & valueArray) { DARABONBA_PTR_SET_VALUE(valueArray_, valueArray) };
    inline DescribeSecurityStatInfoResponseBodyVulnerability& setValueArray(vector<string> && valueArray) { DARABONBA_PTR_SET_RVALUE(valueArray_, valueArray) };


  protected:
    // The number of **high-risk** unfixed vulnerabilities on the current day.
    std::shared_ptr<int32_t> asapCount_ = nullptr;
    // The numbers of high-risk unfixed vulnerabilities at all points in time.
    std::shared_ptr<vector<string>> asapList_ = nullptr;
    // The points in time when data of unfixed vulnerabilities is collected in the trend chart.
    std::shared_ptr<vector<string>> dateArray_ = nullptr;
    // The number of **medium-risk** unfixed vulnerabilities on the current day.
    std::shared_ptr<int32_t> laterCount_ = nullptr;
    // The numbers of medium-risk unfixed vulnerabilities at all points in time.
    std::shared_ptr<vector<string>> laterList_ = nullptr;
    // The risk levels of unfixed vulnerabilities.
    std::shared_ptr<vector<string>> levelsOn_ = nullptr;
    // The number of **low-risk** unfixed vulnerabilities on the current day.
    std::shared_ptr<int32_t> nntfCount_ = nullptr;
    // The numbers of low-risk unfixed vulnerabilities at all points in time.
    std::shared_ptr<vector<string>> nntfList_ = nullptr;
    // The time periods during which data of unfixed vulnerabilities is collected.
    std::shared_ptr<vector<string>> timeArray_ = nullptr;
    // The total number of unfixed vulnerabilities on the current day.
    std::shared_ptr<int32_t> totalCount_ = nullptr;
    // The numbers of unfixed vulnerabilities at all points in time.
    std::shared_ptr<vector<string>> valueArray_ = nullptr;
  };

  } // namespace Models
} // namespace AlibabaCloud
} // namespace Sas20181203
#endif
