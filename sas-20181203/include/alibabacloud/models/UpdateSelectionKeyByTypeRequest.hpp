// This file is auto-generated, don't edit it. Thanks.
#ifndef ALIBABACLOUD_MODELS_UPDATESELECTIONKEYBYTYPEREQUEST_HPP_
#define ALIBABACLOUD_MODELS_UPDATESELECTIONKEYBYTYPEREQUEST_HPP_
#include <darabonba/Core.hpp>
using namespace std;
using json = nlohmann::json;
namespace AlibabaCloud
{
namespace Sas20181203
{
namespace Models
{
  class UpdateSelectionKeyByTypeRequest : public Darabonba::Model {
  public:
    friend void to_json(Darabonba::Json& j, const UpdateSelectionKeyByTypeRequest& obj) { 
      DARABONBA_PTR_TO_JSON(BusinessType, businessType_);
      DARABONBA_PTR_TO_JSON(SelectionKey, selectionKey_);
    };
    friend void from_json(const Darabonba::Json& j, UpdateSelectionKeyByTypeRequest& obj) { 
      DARABONBA_PTR_FROM_JSON(BusinessType, businessType_);
      DARABONBA_PTR_FROM_JSON(SelectionKey, selectionKey_);
    };
    UpdateSelectionKeyByTypeRequest() = default ;
    UpdateSelectionKeyByTypeRequest(const UpdateSelectionKeyByTypeRequest &) = default ;
    UpdateSelectionKeyByTypeRequest(UpdateSelectionKeyByTypeRequest &&) = default ;
    UpdateSelectionKeyByTypeRequest(const Darabonba::Json & obj) { from_json(obj, *this); };
    virtual ~UpdateSelectionKeyByTypeRequest() = default ;
    UpdateSelectionKeyByTypeRequest& operator=(const UpdateSelectionKeyByTypeRequest &) = default ;
    UpdateSelectionKeyByTypeRequest& operator=(UpdateSelectionKeyByTypeRequest &&) = default ;
    virtual void validate() const override {
    };
    virtual void fromMap(const Darabonba::Json &obj) override { from_json(obj, *this); validate(); };
    virtual Darabonba::Json toMap() const override { Darabonba::Json obj; to_json(obj, *this); return obj; };
    virtual bool empty() const override { return this->businessType_ == nullptr
        && return this->selectionKey_ == nullptr; };
    // businessType Field Functions 
    bool hasBusinessType() const { return this->businessType_ != nullptr;};
    void deleteBusinessType() { this->businessType_ = nullptr;};
    inline string businessType() const { DARABONBA_PTR_GET_DEFAULT(businessType_, "") };
    inline UpdateSelectionKeyByTypeRequest& setBusinessType(string businessType) { DARABONBA_PTR_SET_VALUE(businessType_, businessType) };


    // selectionKey Field Functions 
    bool hasSelectionKey() const { return this->selectionKey_ != nullptr;};
    void deleteSelectionKey() { this->selectionKey_ = nullptr;};
    inline string selectionKey() const { DARABONBA_PTR_GET_DEFAULT(selectionKey_, "") };
    inline UpdateSelectionKeyByTypeRequest& setSelectionKey(string selectionKey) { DARABONBA_PTR_SET_VALUE(selectionKey_, selectionKey) };


  protected:
    // The business type of the asset selection. Valid value:
    // 
    // *   **VIRUS_SCAN_CYCLE_CONFIG**: virus detection configuration.
    // *   **VIRUS_SCAN_ONCE_TASK**: one-time scan for virus detection.
    // *   **AGENTLESS_MALICIOUS_WHITE_LIST_[ID]**: a whitelist rule for alerts that are generated by the agentless detection feature.
    // *   **AGENTLESS_VUL_WHITE_LIST_[ID]**: a whitelist rule for vulnerabilities that are detected by the agentless detection feature.
    // *   **FILE_PROTECT_RULE_SWITCH_TYPE_[ID]**: key file protection.
    std::shared_ptr<string> businessType_ = nullptr;
    // The unique identifier of the asset selection.
    std::shared_ptr<string> selectionKey_ = nullptr;
  };

  } // namespace Models
} // namespace AlibabaCloud
} // namespace Sas20181203
#endif
