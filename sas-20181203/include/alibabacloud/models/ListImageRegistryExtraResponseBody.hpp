// This file is auto-generated, don't edit it. Thanks.
#ifndef ALIBABACLOUD_MODELS_LISTIMAGEREGISTRYEXTRARESPONSEBODY_HPP_
#define ALIBABACLOUD_MODELS_LISTIMAGEREGISTRYEXTRARESPONSEBODY_HPP_
#include <darabonba/Core.hpp>
#include <vector>
#include <alibabacloud/models/ListImageRegistryExtraResponseBodyImageRegistryExtraInfos.hpp>
using namespace std;
using json = nlohmann::json;
namespace AlibabaCloud
{
namespace Sas20181203
{
namespace Models
{
  class ListImageRegistryExtraResponseBody : public Darabonba::Model {
  public:
    friend void to_json(Darabonba::Json& j, const ListImageRegistryExtraResponseBody& obj) { 
      DARABONBA_PTR_TO_JSON(ImageRegistryExtraInfos, imageRegistryExtraInfos_);
      DARABONBA_PTR_TO_JSON(RequestId, requestId_);
    };
    friend void from_json(const Darabonba::Json& j, ListImageRegistryExtraResponseBody& obj) { 
      DARABONBA_PTR_FROM_JSON(ImageRegistryExtraInfos, imageRegistryExtraInfos_);
      DARABONBA_PTR_FROM_JSON(RequestId, requestId_);
    };
    ListImageRegistryExtraResponseBody() = default ;
    ListImageRegistryExtraResponseBody(const ListImageRegistryExtraResponseBody &) = default ;
    ListImageRegistryExtraResponseBody(ListImageRegistryExtraResponseBody &&) = default ;
    ListImageRegistryExtraResponseBody(const Darabonba::Json & obj) { from_json(obj, *this); };
    virtual ~ListImageRegistryExtraResponseBody() = default ;
    ListImageRegistryExtraResponseBody& operator=(const ListImageRegistryExtraResponseBody &) = default ;
    ListImageRegistryExtraResponseBody& operator=(ListImageRegistryExtraResponseBody &&) = default ;
    virtual void validate() const override {
    };
    virtual void fromMap(const Darabonba::Json &obj) override { from_json(obj, *this); validate(); };
    virtual Darabonba::Json toMap() const override { Darabonba::Json obj; to_json(obj, *this); return obj; };
    virtual bool empty() const override { this->imageRegistryExtraInfos_ != nullptr
        && this->requestId_ != nullptr; };
    // imageRegistryExtraInfos Field Functions 
    bool hasImageRegistryExtraInfos() const { return this->imageRegistryExtraInfos_ != nullptr;};
    void deleteImageRegistryExtraInfos() { this->imageRegistryExtraInfos_ = nullptr;};
    inline const vector<ListImageRegistryExtraResponseBodyImageRegistryExtraInfos> & imageRegistryExtraInfos() const { DARABONBA_PTR_GET_CONST(imageRegistryExtraInfos_, vector<ListImageRegistryExtraResponseBodyImageRegistryExtraInfos>) };
    inline vector<ListImageRegistryExtraResponseBodyImageRegistryExtraInfos> imageRegistryExtraInfos() { DARABONBA_PTR_GET(imageRegistryExtraInfos_, vector<ListImageRegistryExtraResponseBodyImageRegistryExtraInfos>) };
    inline ListImageRegistryExtraResponseBody& setImageRegistryExtraInfos(const vector<ListImageRegistryExtraResponseBodyImageRegistryExtraInfos> & imageRegistryExtraInfos) { DARABONBA_PTR_SET_VALUE(imageRegistryExtraInfos_, imageRegistryExtraInfos) };
    inline ListImageRegistryExtraResponseBody& setImageRegistryExtraInfos(vector<ListImageRegistryExtraResponseBodyImageRegistryExtraInfos> && imageRegistryExtraInfos) { DARABONBA_PTR_SET_RVALUE(imageRegistryExtraInfos_, imageRegistryExtraInfos) };


    // requestId Field Functions 
    bool hasRequestId() const { return this->requestId_ != nullptr;};
    void deleteRequestId() { this->requestId_ = nullptr;};
    inline string requestId() const { DARABONBA_PTR_GET_DEFAULT(requestId_, "") };
    inline ListImageRegistryExtraResponseBody& setRequestId(string requestId) { DARABONBA_PTR_SET_VALUE(requestId_, requestId) };


  protected:
    // Additional configuration information for the image registry.
    std::shared_ptr<vector<ListImageRegistryExtraResponseBodyImageRegistryExtraInfos>> imageRegistryExtraInfos_ = nullptr;
    // The ID of this request, which is a unique identifier generated by Alibaba Cloud for the request and can be used to troubleshoot and locate issues.
    std::shared_ptr<string> requestId_ = nullptr;
  };

  } // namespace Models
} // namespace AlibabaCloud
} // namespace Sas20181203
#endif
