// This file is auto-generated, don't edit it. Thanks.
#ifndef ALIBABACLOUD_MODELS_GETATTACKPATHWHITELISTRESPONSEBODY_HPP_
#define ALIBABACLOUD_MODELS_GETATTACKPATHWHITELISTRESPONSEBODY_HPP_
#include <darabonba/Core.hpp>
#include <alibabacloud/models/GetAttackPathWhitelistResponseBodyAttackPathWhitelist.hpp>
using namespace std;
using json = nlohmann::json;
namespace AlibabaCloud
{
namespace Sas20181203
{
namespace Models
{
  class GetAttackPathWhitelistResponseBody : public Darabonba::Model {
  public:
    friend void to_json(Darabonba::Json& j, const GetAttackPathWhitelistResponseBody& obj) { 
      DARABONBA_PTR_TO_JSON(AttackPathWhitelist, attackPathWhitelist_);
      DARABONBA_PTR_TO_JSON(RequestId, requestId_);
    };
    friend void from_json(const Darabonba::Json& j, GetAttackPathWhitelistResponseBody& obj) { 
      DARABONBA_PTR_FROM_JSON(AttackPathWhitelist, attackPathWhitelist_);
      DARABONBA_PTR_FROM_JSON(RequestId, requestId_);
    };
    GetAttackPathWhitelistResponseBody() = default ;
    GetAttackPathWhitelistResponseBody(const GetAttackPathWhitelistResponseBody &) = default ;
    GetAttackPathWhitelistResponseBody(GetAttackPathWhitelistResponseBody &&) = default ;
    GetAttackPathWhitelistResponseBody(const Darabonba::Json & obj) { from_json(obj, *this); };
    virtual ~GetAttackPathWhitelistResponseBody() = default ;
    GetAttackPathWhitelistResponseBody& operator=(const GetAttackPathWhitelistResponseBody &) = default ;
    GetAttackPathWhitelistResponseBody& operator=(GetAttackPathWhitelistResponseBody &&) = default ;
    virtual void validate() const override {
    };
    virtual void fromMap(const Darabonba::Json &obj) override { from_json(obj, *this); validate(); };
    virtual Darabonba::Json toMap() const override { Darabonba::Json obj; to_json(obj, *this); return obj; };
    virtual bool empty() const override { this->attackPathWhitelist_ != nullptr
        && this->requestId_ != nullptr; };
    // attackPathWhitelist Field Functions 
    bool hasAttackPathWhitelist() const { return this->attackPathWhitelist_ != nullptr;};
    void deleteAttackPathWhitelist() { this->attackPathWhitelist_ = nullptr;};
    inline const GetAttackPathWhitelistResponseBodyAttackPathWhitelist & attackPathWhitelist() const { DARABONBA_PTR_GET_CONST(attackPathWhitelist_, GetAttackPathWhitelistResponseBodyAttackPathWhitelist) };
    inline GetAttackPathWhitelistResponseBodyAttackPathWhitelist attackPathWhitelist() { DARABONBA_PTR_GET(attackPathWhitelist_, GetAttackPathWhitelistResponseBodyAttackPathWhitelist) };
    inline GetAttackPathWhitelistResponseBody& setAttackPathWhitelist(const GetAttackPathWhitelistResponseBodyAttackPathWhitelist & attackPathWhitelist) { DARABONBA_PTR_SET_VALUE(attackPathWhitelist_, attackPathWhitelist) };
    inline GetAttackPathWhitelistResponseBody& setAttackPathWhitelist(GetAttackPathWhitelistResponseBodyAttackPathWhitelist && attackPathWhitelist) { DARABONBA_PTR_SET_RVALUE(attackPathWhitelist_, attackPathWhitelist) };


    // requestId Field Functions 
    bool hasRequestId() const { return this->requestId_ != nullptr;};
    void deleteRequestId() { this->requestId_ = nullptr;};
    inline string requestId() const { DARABONBA_PTR_GET_DEFAULT(requestId_, "") };
    inline GetAttackPathWhitelistResponseBody& setRequestId(string requestId) { DARABONBA_PTR_SET_VALUE(requestId_, requestId) };


  protected:
    // Attack path whitelist.
    std::shared_ptr<GetAttackPathWhitelistResponseBodyAttackPathWhitelist> attackPathWhitelist_ = nullptr;
    // The ID of this request, which is a unique identifier generated by Alibaba Cloud for the request and can be used for troubleshooting and problem localization.
    std::shared_ptr<string> requestId_ = nullptr;
  };

  } // namespace Models
} // namespace AlibabaCloud
} // namespace Sas20181203
#endif
