// This file is auto-generated, don't edit it. Thanks.
#ifndef ALIBABACLOUD_MODELS_DELETECONNECTEDCLUSTERREQUEST_HPP_
#define ALIBABACLOUD_MODELS_DELETECONNECTEDCLUSTERREQUEST_HPP_
#include <darabonba/Core.hpp>
using namespace std;
using json = nlohmann::json;
namespace AlibabaCloud
{
namespace Elasticsearch20170613
{
namespace Models
{
  class DeleteConnectedClusterRequest : public Darabonba::Model {
  public:
    friend void to_json(Darabonba::Json& j, const DeleteConnectedClusterRequest& obj) { 
      DARABONBA_PTR_TO_JSON(clientToken, clientToken_);
      DARABONBA_PTR_TO_JSON(connectedInstanceId, connectedInstanceId_);
    };
    friend void from_json(const Darabonba::Json& j, DeleteConnectedClusterRequest& obj) { 
      DARABONBA_PTR_FROM_JSON(clientToken, clientToken_);
      DARABONBA_PTR_FROM_JSON(connectedInstanceId, connectedInstanceId_);
    };
    DeleteConnectedClusterRequest() = default ;
    DeleteConnectedClusterRequest(const DeleteConnectedClusterRequest &) = default ;
    DeleteConnectedClusterRequest(DeleteConnectedClusterRequest &&) = default ;
    DeleteConnectedClusterRequest(const Darabonba::Json & obj) { from_json(obj, *this); };
    virtual ~DeleteConnectedClusterRequest() = default ;
    DeleteConnectedClusterRequest& operator=(const DeleteConnectedClusterRequest &) = default ;
    DeleteConnectedClusterRequest& operator=(DeleteConnectedClusterRequest &&) = default ;
    virtual void validate() const override {
    };
    virtual void fromMap(const Darabonba::Json &obj) override { from_json(obj, *this); validate(); };
    virtual Darabonba::Json toMap() const override { Darabonba::Json obj; to_json(obj, *this); return obj; };
    virtual bool empty() const override { this->clientToken_ != nullptr
        && this->connectedInstanceId_ != nullptr; };
    // clientToken Field Functions 
    bool hasClientToken() const { return this->clientToken_ != nullptr;};
    void deleteClientToken() { this->clientToken_ = nullptr;};
    inline string clientToken() const { DARABONBA_PTR_GET_DEFAULT(clientToken_, "") };
    inline DeleteConnectedClusterRequest& setClientToken(string clientToken) { DARABONBA_PTR_SET_VALUE(clientToken_, clientToken) };


    // connectedInstanceId Field Functions 
    bool hasConnectedInstanceId() const { return this->connectedInstanceId_ != nullptr;};
    void deleteConnectedInstanceId() { this->connectedInstanceId_ = nullptr;};
    inline string connectedInstanceId() const { DARABONBA_PTR_GET_DEFAULT(connectedInstanceId_, "") };
    inline DeleteConnectedClusterRequest& setConnectedInstanceId(string connectedInstanceId) { DARABONBA_PTR_SET_VALUE(connectedInstanceId_, connectedInstanceId) };


  protected:
    // A unique token generated by the client to guarantee the idempotency of the request. You can use the client to generate the value, but you must ensure that it is unique among different requests. The token can only contain ASCII characters and cannot exceed 64 characters in length.
    std::shared_ptr<string> clientToken_ = nullptr;
    // The ID of the remote instance for which the network connection is established.
    // 
    // This parameter is required.
    std::shared_ptr<string> connectedInstanceId_ = nullptr;
  };

  } // namespace Models
} // namespace AlibabaCloud
} // namespace Elasticsearch20170613
#endif
