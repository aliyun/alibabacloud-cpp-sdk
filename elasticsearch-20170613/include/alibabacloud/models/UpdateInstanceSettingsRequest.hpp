// This file is auto-generated, don't edit it. Thanks.
#ifndef ALIBABACLOUD_MODELS_UPDATEINSTANCESETTINGSREQUEST_HPP_
#define ALIBABACLOUD_MODELS_UPDATEINSTANCESETTINGSREQUEST_HPP_
#include <darabonba/Core.hpp>
using namespace std;
using json = nlohmann::json;
namespace AlibabaCloud
{
namespace Elasticsearch20170613
{
namespace Models
{
  class UpdateInstanceSettingsRequest : public Darabonba::Model {
  public:
    friend void to_json(Darabonba::Json& j, const UpdateInstanceSettingsRequest& obj) { 
      DARABONBA_PTR_TO_JSON(body, body_);
      DARABONBA_PTR_TO_JSON(clientToken, clientToken_);
      DARABONBA_PTR_TO_JSON(force, force_);
      DARABONBA_PTR_TO_JSON(updateStrategy, updateStrategy_);
    };
    friend void from_json(const Darabonba::Json& j, UpdateInstanceSettingsRequest& obj) { 
      DARABONBA_PTR_FROM_JSON(body, body_);
      DARABONBA_PTR_FROM_JSON(clientToken, clientToken_);
      DARABONBA_PTR_FROM_JSON(force, force_);
      DARABONBA_PTR_FROM_JSON(updateStrategy, updateStrategy_);
    };
    UpdateInstanceSettingsRequest() = default ;
    UpdateInstanceSettingsRequest(const UpdateInstanceSettingsRequest &) = default ;
    UpdateInstanceSettingsRequest(UpdateInstanceSettingsRequest &&) = default ;
    UpdateInstanceSettingsRequest(const Darabonba::Json & obj) { from_json(obj, *this); };
    virtual ~UpdateInstanceSettingsRequest() = default ;
    UpdateInstanceSettingsRequest& operator=(const UpdateInstanceSettingsRequest &) = default ;
    UpdateInstanceSettingsRequest& operator=(UpdateInstanceSettingsRequest &&) = default ;
    virtual void validate() const override {
    };
    virtual void fromMap(const Darabonba::Json &obj) override { from_json(obj, *this); validate(); };
    virtual Darabonba::Json toMap() const override { Darabonba::Json obj; to_json(obj, *this); return obj; };
    virtual bool empty() const override { this->body_ != nullptr
        && this->clientToken_ != nullptr && this->force_ != nullptr && this->updateStrategy_ != nullptr; };
    // body Field Functions 
    bool hasBody() const { return this->body_ != nullptr;};
    void deleteBody() { this->body_ = nullptr;};
    inline string body() const { DARABONBA_PTR_GET_DEFAULT(body_, "") };
    inline UpdateInstanceSettingsRequest& setBody(string body) { DARABONBA_PTR_SET_VALUE(body_, body) };


    // clientToken Field Functions 
    bool hasClientToken() const { return this->clientToken_ != nullptr;};
    void deleteClientToken() { this->clientToken_ = nullptr;};
    inline string clientToken() const { DARABONBA_PTR_GET_DEFAULT(clientToken_, "") };
    inline UpdateInstanceSettingsRequest& setClientToken(string clientToken) { DARABONBA_PTR_SET_VALUE(clientToken_, clientToken) };


    // force Field Functions 
    bool hasForce() const { return this->force_ != nullptr;};
    void deleteForce() { this->force_ = nullptr;};
    inline bool force() const { DARABONBA_PTR_GET_DEFAULT(force_, false) };
    inline UpdateInstanceSettingsRequest& setForce(bool force) { DARABONBA_PTR_SET_VALUE(force_, force) };


    // updateStrategy Field Functions 
    bool hasUpdateStrategy() const { return this->updateStrategy_ != nullptr;};
    void deleteUpdateStrategy() { this->updateStrategy_ = nullptr;};
    inline string updateStrategy() const { DARABONBA_PTR_GET_DEFAULT(updateStrategy_, "") };
    inline UpdateInstanceSettingsRequest& setUpdateStrategy(string updateStrategy) { DARABONBA_PTR_SET_VALUE(updateStrategy_, updateStrategy) };


  protected:
    std::shared_ptr<string> body_ = nullptr;
    // A unique token generated by the client to guarantee the idempotency of the request. You can use the client to generate the value, but you must ensure that it is unique among different requests. The token can only contain ASCII characters and cannot exceed 64 characters in length.
    std::shared_ptr<string> clientToken_ = nullptr;
    std::shared_ptr<bool> force_ = nullptr;
    std::shared_ptr<string> updateStrategy_ = nullptr;
  };

  } // namespace Models
} // namespace AlibabaCloud
} // namespace Elasticsearch20170613
#endif
