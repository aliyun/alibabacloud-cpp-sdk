// This file is auto-generated, don't edit it. Thanks.
#ifndef ALIBABACLOUD_MODELS_DESCRIBEVULNERABILITYPROTECTEDLISTRESPONSEBODYVULNLIST_HPP_
#define ALIBABACLOUD_MODELS_DESCRIBEVULNERABILITYPROTECTEDLISTRESPONSEBODYVULNLIST_HPP_
#include <darabonba/Core.hpp>
#include <vector>
#include <alibabacloud/models/DescribeVulnerabilityProtectedListResponseBodyVulnListResourceList.hpp>
using namespace std;
using json = nlohmann::json;
namespace AlibabaCloud
{
namespace Cloudfw20171207
{
namespace Models
{
  class DescribeVulnerabilityProtectedListResponseBodyVulnList : public Darabonba::Model {
  public:
    friend void to_json(Darabonba::Json& j, const DescribeVulnerabilityProtectedListResponseBodyVulnList& obj) { 
      DARABONBA_PTR_TO_JSON(AttackCnt, attackCnt_);
      DARABONBA_PTR_TO_JSON(AttackType, attackType_);
      DARABONBA_PTR_TO_JSON(BasicRuleIds, basicRuleIds_);
      DARABONBA_PTR_TO_JSON(CveId, cveId_);
      DARABONBA_PTR_TO_JSON(FirstTime, firstTime_);
      DARABONBA_PTR_TO_JSON(HighlightTag, highlightTag_);
      DARABONBA_PTR_TO_JSON(LastTime, lastTime_);
      DARABONBA_PTR_TO_JSON(MemberUid, memberUid_);
      DARABONBA_PTR_TO_JSON(NeedOpenBasicRule, needOpenBasicRule_);
      DARABONBA_PTR_TO_JSON(NeedOpenBasicRuleUuids, needOpenBasicRuleUuids_);
      DARABONBA_PTR_TO_JSON(NeedOpenRunMode, needOpenRunMode_);
      DARABONBA_PTR_TO_JSON(NeedOpenVirtualPatche, needOpenVirtualPatche_);
      DARABONBA_PTR_TO_JSON(NeedOpenVirtualPatcheUuids, needOpenVirtualPatcheUuids_);
      DARABONBA_PTR_TO_JSON(NeedRuleClass, needRuleClass_);
      DARABONBA_PTR_TO_JSON(ResourceCnt, resourceCnt_);
      DARABONBA_PTR_TO_JSON(ResourceList, resourceList_);
      DARABONBA_PTR_TO_JSON(VirtualPatcheIds, virtualPatcheIds_);
      DARABONBA_PTR_TO_JSON(VulnKey, vulnKey_);
      DARABONBA_PTR_TO_JSON(VulnLevel, vulnLevel_);
      DARABONBA_PTR_TO_JSON(VulnName, vulnName_);
      DARABONBA_PTR_TO_JSON(VulnStatus, vulnStatus_);
      DARABONBA_PTR_TO_JSON(VulnType, vulnType_);
    };
    friend void from_json(const Darabonba::Json& j, DescribeVulnerabilityProtectedListResponseBodyVulnList& obj) { 
      DARABONBA_PTR_FROM_JSON(AttackCnt, attackCnt_);
      DARABONBA_PTR_FROM_JSON(AttackType, attackType_);
      DARABONBA_PTR_FROM_JSON(BasicRuleIds, basicRuleIds_);
      DARABONBA_PTR_FROM_JSON(CveId, cveId_);
      DARABONBA_PTR_FROM_JSON(FirstTime, firstTime_);
      DARABONBA_PTR_FROM_JSON(HighlightTag, highlightTag_);
      DARABONBA_PTR_FROM_JSON(LastTime, lastTime_);
      DARABONBA_PTR_FROM_JSON(MemberUid, memberUid_);
      DARABONBA_PTR_FROM_JSON(NeedOpenBasicRule, needOpenBasicRule_);
      DARABONBA_PTR_FROM_JSON(NeedOpenBasicRuleUuids, needOpenBasicRuleUuids_);
      DARABONBA_PTR_FROM_JSON(NeedOpenRunMode, needOpenRunMode_);
      DARABONBA_PTR_FROM_JSON(NeedOpenVirtualPatche, needOpenVirtualPatche_);
      DARABONBA_PTR_FROM_JSON(NeedOpenVirtualPatcheUuids, needOpenVirtualPatcheUuids_);
      DARABONBA_PTR_FROM_JSON(NeedRuleClass, needRuleClass_);
      DARABONBA_PTR_FROM_JSON(ResourceCnt, resourceCnt_);
      DARABONBA_PTR_FROM_JSON(ResourceList, resourceList_);
      DARABONBA_PTR_FROM_JSON(VirtualPatcheIds, virtualPatcheIds_);
      DARABONBA_PTR_FROM_JSON(VulnKey, vulnKey_);
      DARABONBA_PTR_FROM_JSON(VulnLevel, vulnLevel_);
      DARABONBA_PTR_FROM_JSON(VulnName, vulnName_);
      DARABONBA_PTR_FROM_JSON(VulnStatus, vulnStatus_);
      DARABONBA_PTR_FROM_JSON(VulnType, vulnType_);
    };
    DescribeVulnerabilityProtectedListResponseBodyVulnList() = default ;
    DescribeVulnerabilityProtectedListResponseBodyVulnList(const DescribeVulnerabilityProtectedListResponseBodyVulnList &) = default ;
    DescribeVulnerabilityProtectedListResponseBodyVulnList(DescribeVulnerabilityProtectedListResponseBodyVulnList &&) = default ;
    DescribeVulnerabilityProtectedListResponseBodyVulnList(const Darabonba::Json & obj) { from_json(obj, *this); };
    virtual ~DescribeVulnerabilityProtectedListResponseBodyVulnList() = default ;
    DescribeVulnerabilityProtectedListResponseBodyVulnList& operator=(const DescribeVulnerabilityProtectedListResponseBodyVulnList &) = default ;
    DescribeVulnerabilityProtectedListResponseBodyVulnList& operator=(DescribeVulnerabilityProtectedListResponseBodyVulnList &&) = default ;
    virtual void validate() const override {
    };
    virtual void fromMap(const Darabonba::Json &obj) override { from_json(obj, *this); validate(); };
    virtual Darabonba::Json toMap() const override { Darabonba::Json obj; to_json(obj, *this); return obj; };
    virtual bool empty() const override { return this->attackCnt_ == nullptr
        && return this->attackType_ == nullptr && return this->basicRuleIds_ == nullptr && return this->cveId_ == nullptr && return this->firstTime_ == nullptr && return this->highlightTag_ == nullptr
        && return this->lastTime_ == nullptr && return this->memberUid_ == nullptr && return this->needOpenBasicRule_ == nullptr && return this->needOpenBasicRuleUuids_ == nullptr && return this->needOpenRunMode_ == nullptr
        && return this->needOpenVirtualPatche_ == nullptr && return this->needOpenVirtualPatcheUuids_ == nullptr && return this->needRuleClass_ == nullptr && return this->resourceCnt_ == nullptr && return this->resourceList_ == nullptr
        && return this->virtualPatcheIds_ == nullptr && return this->vulnKey_ == nullptr && return this->vulnLevel_ == nullptr && return this->vulnName_ == nullptr && return this->vulnStatus_ == nullptr
        && return this->vulnType_ == nullptr; };
    // attackCnt Field Functions 
    bool hasAttackCnt() const { return this->attackCnt_ != nullptr;};
    void deleteAttackCnt() { this->attackCnt_ = nullptr;};
    inline int32_t attackCnt() const { DARABONBA_PTR_GET_DEFAULT(attackCnt_, 0) };
    inline DescribeVulnerabilityProtectedListResponseBodyVulnList& setAttackCnt(int32_t attackCnt) { DARABONBA_PTR_SET_VALUE(attackCnt_, attackCnt) };


    // attackType Field Functions 
    bool hasAttackType() const { return this->attackType_ != nullptr;};
    void deleteAttackType() { this->attackType_ = nullptr;};
    inline int32_t attackType() const { DARABONBA_PTR_GET_DEFAULT(attackType_, 0) };
    inline DescribeVulnerabilityProtectedListResponseBodyVulnList& setAttackType(int32_t attackType) { DARABONBA_PTR_SET_VALUE(attackType_, attackType) };


    // basicRuleIds Field Functions 
    bool hasBasicRuleIds() const { return this->basicRuleIds_ != nullptr;};
    void deleteBasicRuleIds() { this->basicRuleIds_ = nullptr;};
    inline string basicRuleIds() const { DARABONBA_PTR_GET_DEFAULT(basicRuleIds_, "") };
    inline DescribeVulnerabilityProtectedListResponseBodyVulnList& setBasicRuleIds(string basicRuleIds) { DARABONBA_PTR_SET_VALUE(basicRuleIds_, basicRuleIds) };


    // cveId Field Functions 
    bool hasCveId() const { return this->cveId_ != nullptr;};
    void deleteCveId() { this->cveId_ = nullptr;};
    inline string cveId() const { DARABONBA_PTR_GET_DEFAULT(cveId_, "") };
    inline DescribeVulnerabilityProtectedListResponseBodyVulnList& setCveId(string cveId) { DARABONBA_PTR_SET_VALUE(cveId_, cveId) };


    // firstTime Field Functions 
    bool hasFirstTime() const { return this->firstTime_ != nullptr;};
    void deleteFirstTime() { this->firstTime_ = nullptr;};
    inline int64_t firstTime() const { DARABONBA_PTR_GET_DEFAULT(firstTime_, 0L) };
    inline DescribeVulnerabilityProtectedListResponseBodyVulnList& setFirstTime(int64_t firstTime) { DARABONBA_PTR_SET_VALUE(firstTime_, firstTime) };


    // highlightTag Field Functions 
    bool hasHighlightTag() const { return this->highlightTag_ != nullptr;};
    void deleteHighlightTag() { this->highlightTag_ = nullptr;};
    inline int32_t highlightTag() const { DARABONBA_PTR_GET_DEFAULT(highlightTag_, 0) };
    inline DescribeVulnerabilityProtectedListResponseBodyVulnList& setHighlightTag(int32_t highlightTag) { DARABONBA_PTR_SET_VALUE(highlightTag_, highlightTag) };


    // lastTime Field Functions 
    bool hasLastTime() const { return this->lastTime_ != nullptr;};
    void deleteLastTime() { this->lastTime_ = nullptr;};
    inline int64_t lastTime() const { DARABONBA_PTR_GET_DEFAULT(lastTime_, 0L) };
    inline DescribeVulnerabilityProtectedListResponseBodyVulnList& setLastTime(int64_t lastTime) { DARABONBA_PTR_SET_VALUE(lastTime_, lastTime) };


    // memberUid Field Functions 
    bool hasMemberUid() const { return this->memberUid_ != nullptr;};
    void deleteMemberUid() { this->memberUid_ = nullptr;};
    inline string memberUid() const { DARABONBA_PTR_GET_DEFAULT(memberUid_, "") };
    inline DescribeVulnerabilityProtectedListResponseBodyVulnList& setMemberUid(string memberUid) { DARABONBA_PTR_SET_VALUE(memberUid_, memberUid) };


    // needOpenBasicRule Field Functions 
    bool hasNeedOpenBasicRule() const { return this->needOpenBasicRule_ != nullptr;};
    void deleteNeedOpenBasicRule() { this->needOpenBasicRule_ = nullptr;};
    inline bool needOpenBasicRule() const { DARABONBA_PTR_GET_DEFAULT(needOpenBasicRule_, false) };
    inline DescribeVulnerabilityProtectedListResponseBodyVulnList& setNeedOpenBasicRule(bool needOpenBasicRule) { DARABONBA_PTR_SET_VALUE(needOpenBasicRule_, needOpenBasicRule) };


    // needOpenBasicRuleUuids Field Functions 
    bool hasNeedOpenBasicRuleUuids() const { return this->needOpenBasicRuleUuids_ != nullptr;};
    void deleteNeedOpenBasicRuleUuids() { this->needOpenBasicRuleUuids_ = nullptr;};
    inline string needOpenBasicRuleUuids() const { DARABONBA_PTR_GET_DEFAULT(needOpenBasicRuleUuids_, "") };
    inline DescribeVulnerabilityProtectedListResponseBodyVulnList& setNeedOpenBasicRuleUuids(string needOpenBasicRuleUuids) { DARABONBA_PTR_SET_VALUE(needOpenBasicRuleUuids_, needOpenBasicRuleUuids) };


    // needOpenRunMode Field Functions 
    bool hasNeedOpenRunMode() const { return this->needOpenRunMode_ != nullptr;};
    void deleteNeedOpenRunMode() { this->needOpenRunMode_ = nullptr;};
    inline bool needOpenRunMode() const { DARABONBA_PTR_GET_DEFAULT(needOpenRunMode_, false) };
    inline DescribeVulnerabilityProtectedListResponseBodyVulnList& setNeedOpenRunMode(bool needOpenRunMode) { DARABONBA_PTR_SET_VALUE(needOpenRunMode_, needOpenRunMode) };


    // needOpenVirtualPatche Field Functions 
    bool hasNeedOpenVirtualPatche() const { return this->needOpenVirtualPatche_ != nullptr;};
    void deleteNeedOpenVirtualPatche() { this->needOpenVirtualPatche_ = nullptr;};
    inline bool needOpenVirtualPatche() const { DARABONBA_PTR_GET_DEFAULT(needOpenVirtualPatche_, false) };
    inline DescribeVulnerabilityProtectedListResponseBodyVulnList& setNeedOpenVirtualPatche(bool needOpenVirtualPatche) { DARABONBA_PTR_SET_VALUE(needOpenVirtualPatche_, needOpenVirtualPatche) };


    // needOpenVirtualPatcheUuids Field Functions 
    bool hasNeedOpenVirtualPatcheUuids() const { return this->needOpenVirtualPatcheUuids_ != nullptr;};
    void deleteNeedOpenVirtualPatcheUuids() { this->needOpenVirtualPatcheUuids_ = nullptr;};
    inline string needOpenVirtualPatcheUuids() const { DARABONBA_PTR_GET_DEFAULT(needOpenVirtualPatcheUuids_, "") };
    inline DescribeVulnerabilityProtectedListResponseBodyVulnList& setNeedOpenVirtualPatcheUuids(string needOpenVirtualPatcheUuids) { DARABONBA_PTR_SET_VALUE(needOpenVirtualPatcheUuids_, needOpenVirtualPatcheUuids) };


    // needRuleClass Field Functions 
    bool hasNeedRuleClass() const { return this->needRuleClass_ != nullptr;};
    void deleteNeedRuleClass() { this->needRuleClass_ = nullptr;};
    inline int32_t needRuleClass() const { DARABONBA_PTR_GET_DEFAULT(needRuleClass_, 0) };
    inline DescribeVulnerabilityProtectedListResponseBodyVulnList& setNeedRuleClass(int32_t needRuleClass) { DARABONBA_PTR_SET_VALUE(needRuleClass_, needRuleClass) };


    // resourceCnt Field Functions 
    bool hasResourceCnt() const { return this->resourceCnt_ != nullptr;};
    void deleteResourceCnt() { this->resourceCnt_ = nullptr;};
    inline int32_t resourceCnt() const { DARABONBA_PTR_GET_DEFAULT(resourceCnt_, 0) };
    inline DescribeVulnerabilityProtectedListResponseBodyVulnList& setResourceCnt(int32_t resourceCnt) { DARABONBA_PTR_SET_VALUE(resourceCnt_, resourceCnt) };


    // resourceList Field Functions 
    bool hasResourceList() const { return this->resourceList_ != nullptr;};
    void deleteResourceList() { this->resourceList_ = nullptr;};
    inline const vector<Models::DescribeVulnerabilityProtectedListResponseBodyVulnListResourceList> & resourceList() const { DARABONBA_PTR_GET_CONST(resourceList_, vector<Models::DescribeVulnerabilityProtectedListResponseBodyVulnListResourceList>) };
    inline vector<Models::DescribeVulnerabilityProtectedListResponseBodyVulnListResourceList> resourceList() { DARABONBA_PTR_GET(resourceList_, vector<Models::DescribeVulnerabilityProtectedListResponseBodyVulnListResourceList>) };
    inline DescribeVulnerabilityProtectedListResponseBodyVulnList& setResourceList(const vector<Models::DescribeVulnerabilityProtectedListResponseBodyVulnListResourceList> & resourceList) { DARABONBA_PTR_SET_VALUE(resourceList_, resourceList) };
    inline DescribeVulnerabilityProtectedListResponseBodyVulnList& setResourceList(vector<Models::DescribeVulnerabilityProtectedListResponseBodyVulnListResourceList> && resourceList) { DARABONBA_PTR_SET_RVALUE(resourceList_, resourceList) };


    // virtualPatcheIds Field Functions 
    bool hasVirtualPatcheIds() const { return this->virtualPatcheIds_ != nullptr;};
    void deleteVirtualPatcheIds() { this->virtualPatcheIds_ = nullptr;};
    inline string virtualPatcheIds() const { DARABONBA_PTR_GET_DEFAULT(virtualPatcheIds_, "") };
    inline DescribeVulnerabilityProtectedListResponseBodyVulnList& setVirtualPatcheIds(string virtualPatcheIds) { DARABONBA_PTR_SET_VALUE(virtualPatcheIds_, virtualPatcheIds) };


    // vulnKey Field Functions 
    bool hasVulnKey() const { return this->vulnKey_ != nullptr;};
    void deleteVulnKey() { this->vulnKey_ = nullptr;};
    inline string vulnKey() const { DARABONBA_PTR_GET_DEFAULT(vulnKey_, "") };
    inline DescribeVulnerabilityProtectedListResponseBodyVulnList& setVulnKey(string vulnKey) { DARABONBA_PTR_SET_VALUE(vulnKey_, vulnKey) };


    // vulnLevel Field Functions 
    bool hasVulnLevel() const { return this->vulnLevel_ != nullptr;};
    void deleteVulnLevel() { this->vulnLevel_ = nullptr;};
    inline string vulnLevel() const { DARABONBA_PTR_GET_DEFAULT(vulnLevel_, "") };
    inline DescribeVulnerabilityProtectedListResponseBodyVulnList& setVulnLevel(string vulnLevel) { DARABONBA_PTR_SET_VALUE(vulnLevel_, vulnLevel) };


    // vulnName Field Functions 
    bool hasVulnName() const { return this->vulnName_ != nullptr;};
    void deleteVulnName() { this->vulnName_ = nullptr;};
    inline string vulnName() const { DARABONBA_PTR_GET_DEFAULT(vulnName_, "") };
    inline DescribeVulnerabilityProtectedListResponseBodyVulnList& setVulnName(string vulnName) { DARABONBA_PTR_SET_VALUE(vulnName_, vulnName) };


    // vulnStatus Field Functions 
    bool hasVulnStatus() const { return this->vulnStatus_ != nullptr;};
    void deleteVulnStatus() { this->vulnStatus_ = nullptr;};
    inline string vulnStatus() const { DARABONBA_PTR_GET_DEFAULT(vulnStatus_, "") };
    inline DescribeVulnerabilityProtectedListResponseBodyVulnList& setVulnStatus(string vulnStatus) { DARABONBA_PTR_SET_VALUE(vulnStatus_, vulnStatus) };


    // vulnType Field Functions 
    bool hasVulnType() const { return this->vulnType_ != nullptr;};
    void deleteVulnType() { this->vulnType_ = nullptr;};
    inline string vulnType() const { DARABONBA_PTR_GET_DEFAULT(vulnType_, "") };
    inline DescribeVulnerabilityProtectedListResponseBodyVulnList& setVulnType(string vulnType) { DARABONBA_PTR_SET_VALUE(vulnType_, vulnType) };


  protected:
    // The number of vulnerability attacks.
    std::shared_ptr<int32_t> attackCnt_ = nullptr;
    // The attack type of the vulnerability prevention event. Valid values:
    // 
    // *   **1**: suspicious connection
    // *   **2**: command execution
    // *   **3**: brute-force attack
    // *   **4**: scanning
    // *   **5**: others
    // *   **6**: information leakage
    // *   **7**: DoS attack
    // *   **8**: buffer overflow attack
    // *   **9**: web attack
    // *   **10**: webshell
    // *   **11**: computer worm
    // *   **12**: mining
    // *   **13**: reverse shell
    std::shared_ptr<int32_t> attackType_ = nullptr;
    // The IDs of associated basic protection policies.
    std::shared_ptr<string> basicRuleIds_ = nullptr;
    // The CVE IDs.
    std::shared_ptr<string> cveId_ = nullptr;
    // The time when the first attack was launched.
    std::shared_ptr<int64_t> firstTime_ = nullptr;
    // Indicates whether you need to pay special attention to the vulnerability. Valid values:
    // 
    // *   **0**: no
    // *   **1**: yes
    std::shared_ptr<int32_t> highlightTag_ = nullptr;
    // The time when the last attack was launched.
    std::shared_ptr<int64_t> lastTime_ = nullptr;
    // The UID of the member that is managed by your Alibaba Cloud account.
    std::shared_ptr<string> memberUid_ = nullptr;
    // Indicates whether the basic protection policy that related to the vulnerability is enabled. Valid values:
    // 
    // *   **true**
    // *   **false**
    // 
    // >  If the value of this parameter is true, you must set the action of the basic protection policy related to the vulnerability to Block.
    std::shared_ptr<bool> needOpenBasicRule_ = nullptr;
    // The UUIDs of the basic protection policies for which the action needs to be changed to Block.
    std::shared_ptr<string> needOpenBasicRuleUuids_ = nullptr;
    // Indicates whether Threat Engine Mode needs to be configured when you enable protection. Valid values:
    // 
    // *   **true**
    // *   **false**
    std::shared_ptr<bool> needOpenRunMode_ = nullptr;
    // Indicates whether the virtual patching policy that related to the vulnerability is enabled. Valid values:
    // 
    // *   **true**
    // *   **false**
    // 
    // >  If the value of this parameter is true, you must set the action of the virtual patching policy that related to the vulnerability to Block.
    std::shared_ptr<bool> needOpenVirtualPatche_ = nullptr;
    // The UUIDs of the virtual patching policies for which the action needs to be changed to Block.
    std::shared_ptr<string> needOpenVirtualPatcheUuids_ = nullptr;
    // The type of the rule group. Valid values:
    // 
    // *   **1** (default): loose
    // *   **2**: medium
    // *   **3**: strict
    std::shared_ptr<int32_t> needRuleClass_ = nullptr;
    // The number of assets on which vulnerabilities are detected.
    std::shared_ptr<int32_t> resourceCnt_ = nullptr;
    // The assets on which the vulnerability is detected.
    std::shared_ptr<vector<Models::DescribeVulnerabilityProtectedListResponseBodyVulnListResourceList>> resourceList_ = nullptr;
    // The IDs of associated virtual patching policies.
    std::shared_ptr<string> virtualPatcheIds_ = nullptr;
    // The code of the vulnerability.
    std::shared_ptr<string> vulnKey_ = nullptr;
    // The risk level of the vulnerability. Valid values:
    // 
    // *   **high**
    // *   **medium**
    // *   **low**
    std::shared_ptr<string> vulnLevel_ = nullptr;
    // The name of the vulnerability.
    std::shared_ptr<string> vulnName_ = nullptr;
    // The status of the vulnerability prevention feature. Valid values:
    // 
    // *   **partProtected**: enabled for partial assets
    // *   **protected**: enabled
    // *   **unProtected**: disabled
    std::shared_ptr<string> vulnStatus_ = nullptr;
    // The type of the vulnerability. Valid values:
    // 
    // *   **emg**: urgent vulnerability
    // *   **webcms**: Web-CMS vulnerability
    // *   **app**: application vulnerability
    std::shared_ptr<string> vulnType_ = nullptr;
  };

  } // namespace Models
} // namespace AlibabaCloud
} // namespace Cloudfw20171207
#endif
