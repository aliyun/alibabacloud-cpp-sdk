// This file is auto-generated, don't edit it. Thanks.
#ifndef ALIBABACLOUD_MODELS_MODIFYDEVICEINFOREQUEST_HPP_
#define ALIBABACLOUD_MODELS_MODIFYDEVICEINFOREQUEST_HPP_
#include <darabonba/Core.hpp>
using namespace std;
using json = nlohmann::json;
namespace AlibabaCloud
{
namespace Cloudauth20190307
{
namespace Models
{
  class ModifyDeviceInfoRequest : public Darabonba::Model {
  public:
    friend void to_json(Darabonba::Json& j, const ModifyDeviceInfoRequest& obj) { 
      DARABONBA_PTR_TO_JSON(BizType, bizType_);
      DARABONBA_PTR_TO_JSON(DeviceId, deviceId_);
      DARABONBA_PTR_TO_JSON(Duration, duration_);
      DARABONBA_PTR_TO_JSON(ExpiredDay, expiredDay_);
      DARABONBA_PTR_TO_JSON(UserDeviceId, userDeviceId_);
    };
    friend void from_json(const Darabonba::Json& j, ModifyDeviceInfoRequest& obj) { 
      DARABONBA_PTR_FROM_JSON(BizType, bizType_);
      DARABONBA_PTR_FROM_JSON(DeviceId, deviceId_);
      DARABONBA_PTR_FROM_JSON(Duration, duration_);
      DARABONBA_PTR_FROM_JSON(ExpiredDay, expiredDay_);
      DARABONBA_PTR_FROM_JSON(UserDeviceId, userDeviceId_);
    };
    ModifyDeviceInfoRequest() = default ;
    ModifyDeviceInfoRequest(const ModifyDeviceInfoRequest &) = default ;
    ModifyDeviceInfoRequest(ModifyDeviceInfoRequest &&) = default ;
    ModifyDeviceInfoRequest(const Darabonba::Json & obj) { from_json(obj, *this); };
    virtual ~ModifyDeviceInfoRequest() = default ;
    ModifyDeviceInfoRequest& operator=(const ModifyDeviceInfoRequest &) = default ;
    ModifyDeviceInfoRequest& operator=(ModifyDeviceInfoRequest &&) = default ;
    virtual void validate() const override {
    };
    virtual void fromMap(const Darabonba::Json &obj) override { from_json(obj, *this); validate(); };
    virtual Darabonba::Json toMap() const override { Darabonba::Json obj; to_json(obj, *this); return obj; };
    virtual bool empty() const override { this->bizType_ != nullptr
        && this->deviceId_ != nullptr && this->duration_ != nullptr && this->expiredDay_ != nullptr && this->userDeviceId_ != nullptr; };
    // bizType Field Functions 
    bool hasBizType() const { return this->bizType_ != nullptr;};
    void deleteBizType() { this->bizType_ = nullptr;};
    inline string bizType() const { DARABONBA_PTR_GET_DEFAULT(bizType_, "") };
    inline ModifyDeviceInfoRequest& setBizType(string bizType) { DARABONBA_PTR_SET_VALUE(bizType_, bizType) };


    // deviceId Field Functions 
    bool hasDeviceId() const { return this->deviceId_ != nullptr;};
    void deleteDeviceId() { this->deviceId_ = nullptr;};
    inline string deviceId() const { DARABONBA_PTR_GET_DEFAULT(deviceId_, "") };
    inline ModifyDeviceInfoRequest& setDeviceId(string deviceId) { DARABONBA_PTR_SET_VALUE(deviceId_, deviceId) };


    // duration Field Functions 
    bool hasDuration() const { return this->duration_ != nullptr;};
    void deleteDuration() { this->duration_ = nullptr;};
    inline string duration() const { DARABONBA_PTR_GET_DEFAULT(duration_, "") };
    inline ModifyDeviceInfoRequest& setDuration(string duration) { DARABONBA_PTR_SET_VALUE(duration_, duration) };


    // expiredDay Field Functions 
    bool hasExpiredDay() const { return this->expiredDay_ != nullptr;};
    void deleteExpiredDay() { this->expiredDay_ = nullptr;};
    inline string expiredDay() const { DARABONBA_PTR_GET_DEFAULT(expiredDay_, "") };
    inline ModifyDeviceInfoRequest& setExpiredDay(string expiredDay) { DARABONBA_PTR_SET_VALUE(expiredDay_, expiredDay) };


    // userDeviceId Field Functions 
    bool hasUserDeviceId() const { return this->userDeviceId_ != nullptr;};
    void deleteUserDeviceId() { this->userDeviceId_ = nullptr;};
    inline string userDeviceId() const { DARABONBA_PTR_GET_DEFAULT(userDeviceId_, "") };
    inline ModifyDeviceInfoRequest& setUserDeviceId(string userDeviceId) { DARABONBA_PTR_SET_VALUE(userDeviceId_, userDeviceId) };


  protected:
    // The updated business type. It should not exceed 64 characters and is defined by the connected party. It can be used to annotate specific businesses, for example, different face usage scenarios or the customer identifiers to be delivered.
    std::shared_ptr<string> bizType_ = nullptr;
    // A unique ID generated by the real-person authentication server for the connected device, which is only generated after the device is successfully activated. This ID can be obtained through the getLicenseExtraInfo function in the offline facial recognition SDK.
    // 
    // This parameter is required.
    std::shared_ptr<string> deviceId_ = nullptr;
    // The extended duration of the device expiration. Unit: years, with a range of [1,100]. A value of 100 indicates permanent use. One year is calculated as 365 days.
    std::shared_ptr<string> duration_ = nullptr;
    // The current expiration time of the device. If the expiration date is incorrect (differing from the real-person authentication server\\"s recorded expiration time by more than one week), an error will be reported.
    // > The expiration time can be queried through the DescribeDeviceInfo interface. An incorrect expiration date will result in an error. This check ensures that the business party does not accidentally re-activate a device due to some misoperation, thus consuming the authorization unnecessarily.
    std::shared_ptr<string> expiredDay_ = nullptr;
    // The updated user device ID. It should not exceed 64 characters and is defined by the connected party. It can be used to identify specific devices, and it is recommended to use the physical number of the device.
    std::shared_ptr<string> userDeviceId_ = nullptr;
  };

  } // namespace Models
} // namespace AlibabaCloud
} // namespace Cloudauth20190307
#endif
