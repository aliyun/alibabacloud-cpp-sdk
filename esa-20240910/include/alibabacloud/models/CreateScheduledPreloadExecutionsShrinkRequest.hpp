// This file is auto-generated, don't edit it. Thanks.
#ifndef ALIBABACLOUD_MODELS_CREATESCHEDULEDPRELOADEXECUTIONSSHRINKREQUEST_HPP_
#define ALIBABACLOUD_MODELS_CREATESCHEDULEDPRELOADEXECUTIONSSHRINKREQUEST_HPP_
#include <darabonba/Core.hpp>
using namespace std;
using json = nlohmann::json;
namespace AlibabaCloud
{
namespace ESA20240910
{
namespace Models
{
  class CreateScheduledPreloadExecutionsShrinkRequest : public Darabonba::Model {
  public:
    friend void to_json(Darabonba::Json& j, const CreateScheduledPreloadExecutionsShrinkRequest& obj) { 
      DARABONBA_PTR_TO_JSON(Executions, executionsShrink_);
      DARABONBA_PTR_TO_JSON(Id, id_);
    };
    friend void from_json(const Darabonba::Json& j, CreateScheduledPreloadExecutionsShrinkRequest& obj) { 
      DARABONBA_PTR_FROM_JSON(Executions, executionsShrink_);
      DARABONBA_PTR_FROM_JSON(Id, id_);
    };
    CreateScheduledPreloadExecutionsShrinkRequest() = default ;
    CreateScheduledPreloadExecutionsShrinkRequest(const CreateScheduledPreloadExecutionsShrinkRequest &) = default ;
    CreateScheduledPreloadExecutionsShrinkRequest(CreateScheduledPreloadExecutionsShrinkRequest &&) = default ;
    CreateScheduledPreloadExecutionsShrinkRequest(const Darabonba::Json & obj) { from_json(obj, *this); };
    virtual ~CreateScheduledPreloadExecutionsShrinkRequest() = default ;
    CreateScheduledPreloadExecutionsShrinkRequest& operator=(const CreateScheduledPreloadExecutionsShrinkRequest &) = default ;
    CreateScheduledPreloadExecutionsShrinkRequest& operator=(CreateScheduledPreloadExecutionsShrinkRequest &&) = default ;
    virtual void validate() const override {
    };
    virtual void fromMap(const Darabonba::Json &obj) override { from_json(obj, *this); validate(); };
    virtual Darabonba::Json toMap() const override { Darabonba::Json obj; to_json(obj, *this); return obj; };
    virtual bool empty() const override { return this->executionsShrink_ == nullptr
        && return this->id_ == nullptr; };
    // executionsShrink Field Functions 
    bool hasExecutionsShrink() const { return this->executionsShrink_ != nullptr;};
    void deleteExecutionsShrink() { this->executionsShrink_ = nullptr;};
    inline string executionsShrink() const { DARABONBA_PTR_GET_DEFAULT(executionsShrink_, "") };
    inline CreateScheduledPreloadExecutionsShrinkRequest& setExecutionsShrink(string executionsShrink) { DARABONBA_PTR_SET_VALUE(executionsShrink_, executionsShrink) };


    // id Field Functions 
    bool hasId() const { return this->id_ != nullptr;};
    void deleteId() { this->id_ = nullptr;};
    inline string id() const { DARABONBA_PTR_GET_DEFAULT(id_, "") };
    inline CreateScheduledPreloadExecutionsShrinkRequest& setId(string id) { DARABONBA_PTR_SET_VALUE(id_, id) };


  protected:
    // The scheduled prefetch plans to create.
    // 
    // This parameter is required.
    std::shared_ptr<string> executionsShrink_ = nullptr;
    // The ID of the prefetch task, which is generated by calling the [CreateScheduledPreloadJob](https://help.aliyun.com/document_detail/2850459.html) operation.
    std::shared_ptr<string> id_ = nullptr;
  };

  } // namespace Models
} // namespace AlibabaCloud
} // namespace ESA20240910
#endif
